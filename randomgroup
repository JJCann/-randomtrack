/*
 * Nightbot command:
 * !editcom -ul=everyone -cd=5 !randomgroup $(eval group('$(query)', $(urlfetch json https://docs.google.com/spreadsheets/d/1xuaX59UY1SPX6-l5qE5V7aHXudkz35DMEKVCmPZo9AY/export?exportFormat=tsv)); $(urlfetch json https://raw.githubusercontent.com/JJCann/-randomtrack/master/randomgroup);)
*/
function group(query = '', data = {}) {
    query = normalize(query);

    /* Find all car that match the specified track type */
    const [groupname] = parse_query(query);
    const groups = data[groupname];
    if (groups !== Object(groups)) {
        return 'To use this command, write !randomgroup, then a space, then the class you want (single, not plural, including all or multi)'
    }
 
    /* Output a random group (or error message) */
    if (groups.length > 0) {
        const i = Math.floor(Math.random() * groups.length);
        const group = groups[i];
        
        return group;
    }
    return 'Could not find a matching random group ¯\\_(ツ)_/¯';
}

function normalize(text) {
    if (!text) {
        text = '';
    }

    /* Convert to lowercase */
    text = text.toLowerCase();

    /* Remove plural (unless part of 'PS 4')*/
    text = text.replace(/(?<=\bp)s\b(?=4)/g, '');

    /* Remove accents */
    text = text.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

    /* Remove everything behind '@' */
    text = text.replace(/\s*@.*/, '');

    /* Remove all chars that are not letters */
    text = text.replace(/[^a-z0-9 ]+/g, '');

    return text;
}

function parse_query(query_before='') {
    var query_after = '';

    query_after = query_before.replace(/\ball\b/g, '');
    if (query_before !== query_after) return ['All', query_after.trim()];

    query_after = query_before.replace(/\bsuper\b/g, '');
    if (query_before !== query_after) return ['Super', query_after.trim()];

    query_after = query_before.replace(/\bsport\b/g, '');
    if (query_before !== query_after) return ['Sport', query_after.trim()];

    query_after = query_before.replace(/\bmulti\b/g, '');
    if (query_before !== query_after) return ['Multi', query_after.trim()];

    query_after = query_before.replace(/\bsportsclassic\b/g, '');
    if (query_before !== query_after) return ['SportsClassic', query_after.trim()];

    query_after = query_before.replace(/\bmuscle\b/g, '');
    if (query_before !== query_after) return ['Muscle', query_after.trim()];

    query_after = query_before.replace(/\boffroad\b/g, '');
    if (query_before !== query_after) return ['OffRoad', query_after.trim()];

    query_after = query_before.replace(/\bcoupe\b/g, '');
    if (query_before !== query_after) return ['Coupe', query_after.trim()];
    
    query_after = query_before.replace(/\bopenwheel\b/g, '');
    if (query_before !== query_after) return ['OpenWheel', query_after.trim()];

    query_after = query_before.replace(/\bspecial\b/g, '');
    if (query_before !== query_after) return ['Special', query_after.trim()];

    query_after = query_before.replace(/\bcompact\b/g, '');
    if (query_before !== query_after) return ['Compact', query_after.trim()];

    query_after = query_before.replace(/\bvan\b/g, '');
    if (query_before !== query_after) return ['Van', query_after.trim()];

    query_after = query_before.replace(/\bsedan\b/g, '');
    if (query_before !== query_after) return ['Sedan', query_after.trim()];

    query_after = query_before.replace(/\bsuv\b/g, '');
    if (query_before !== query_after) return ['SUV', query_after.trim()];
    
    query_after = query_before.replace(/\btuner\b/g, '');
    if (query_before !== query_after) return ['Tuner', query_after.trim()];
    
    return ['', query_before];
}
