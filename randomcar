/*
 * Nightbot command:
 * !editcom -ul=everyone -cd=5 !randomcar $(eval car('$(query)', $(urlfetch json https://docs.google.com/spreadsheets/d/1IT3gGl7DmV-STkL-vPrek6T50kzGwql27Fa9hSTQQDE/export?exportFormat=tsv)); $(urlfetch json https://raw.githubusercontent.com/JJCann/-randomtrack/master/randomcar);)
*/
function car(query = '', data = {}) {
    query = normalize(query);

    /* Find all car that match the specified track type */
    const [carname] = parse_query(query);
    const cars = data[carname];
    if (cars !== Object(cars)) {
        return 'To use this command, write !randomcar, then a space, then the class you want (single, not plural - including all/meme), or a letter (A-Z)'
    }
 
    /* Output a random car (or error message) */
    if (cars.length > 0) {
        const i = Math.floor(Math.random() * cars.length);
        const car = cars[i];
        
        return car;
    }
    return 'Could not find a matching random car ¯\\_(ツ)_/¯';
}

function normalize(text) {
    if (!text) {
        text = '';
    }

    /* Convert to lowercase */
    text = text.toLowerCase();

    /* Remove plural (unless part of 'PS 4')*/
    text = text.replace(/(?<=\bp)s\b(?=4)/g, '');

    /* Remove accents */
    text = text.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

    /* Remove everything behind '@' */
    text = text.replace(/\s*@.*/, '');

    /* Remove all chars that are not letters */
    text = text.replace(/[^a-z0-9 ]+/g, '');

    return text;
}

function parse_query(query_before='') {
    var query_after = '';

    query_after = query_before.replace(/\ball\b/g, '');
    if (query_before !== query_after) return ['All', query_after.trim()];

    query_after = query_before.replace(/\bsuper\b/g, '');
    if (query_before !== query_after) return ['Super', query_after.trim()];

    query_after = query_before.replace(/\bsport\b/g, '');
    if (query_before !== query_after) return ['Sport', query_after.trim()];

    query_after = query_before.replace(/\brally\b/g, '');
    if (query_before !== query_after) return ['Rally', query_after.trim()];

    query_after = query_before.replace(/\bsportsclassic\b/g, '');
    if (query_before !== query_after) return ['SportsClassic', query_after.trim()];

    query_after = query_before.replace(/\bmuscle\b/g, '');
    if (query_before !== query_after) return ['Muscle', query_after.trim()];

    query_after = query_before.replace(/\boffroad\b/g, '');
    if (query_before !== query_after) return ['Offroad', query_after.trim()];

    query_after = query_before.replace(/\bcoupe\b/g, '');
    if (query_before !== query_after) return ['Coupe', query_after.trim()];
    
    query_after = query_before.replace(/\bopenwheel\b/g, '');
    if (query_before !== query_after) return ['OpenWheel', query_after.trim()];

    query_after = query_before.replace(/\bspecial\b/g, '');
    if (query_before !== query_after) return ['Special', query_after.trim()];

    query_after = query_before.replace(/\bcompact\b/g, '');
    if (query_before !== query_after) return ['Compact', query_after.trim()];

    query_after = query_before.replace(/\bvan\b/g, '');
    if (query_before !== query_after) return ['Van', query_after.trim()];

    query_after = query_before.replace(/\bsedan\b/g, '');
    if (query_before !== query_after) return ['Sedan', query_after.trim()];

    query_after = query_before.replace(/\bsuv\b/g, '');
    if (query_before !== query_after) return ['SUV', query_after.trim()];

    query_after = query_before.replace(/\bmeme\b/g, '');
    if (query_before !== query_after) return ['Meme', query_after.trim()];
    
     query_after = query_before.replace(/\btuner\b/g, '');
    if (query_before !== query_after) return ['Tuner', query_after.trim()];
    
     query_after = query_before.replace(/\ba\b/g, '');
    if (query_before !== query_after) return ['A', query_after.trim()];

     query_after = query_before.replace(/\ba\b/g, '');
    if (query_before !== query_after) return ['A', query_after.trim()];

          query_after = query_before.replace(/\ba\b/g, '');
    if (query_before !== query_after) return ['A', query_after.trim()];

          query_after = query_before.replace(/\bb\b/g, '');
    if (query_before !== query_after) return ['B', query_after.trim()];

          query_after = query_before.replace(/\bc\b/g, '');
    if (query_before !== query_after) return ['C', query_after.trim()];

          query_after = query_before.replace(/\bd\b/g, '');
    if (query_before !== query_after) return ['D', query_after.trim()];

          query_after = query_before.replace(/\be\b/g, '');
    if (query_before !== query_after) return ['E', query_after.trim()];

          query_after = query_before.replace(/\bf\b/g, '');
    if (query_before !== query_after) return ['F', query_after.trim()];

          query_after = query_before.replace(/\bg\b/g, '');
    if (query_before !== query_after) return ['G', query_after.trim()];

          query_after = query_before.replace(/\bh\b/g, '');
    if (query_before !== query_after) return ['H', query_after.trim()];

          query_after = query_before.replace(/\bi\b/g, '');
    if (query_before !== query_after) return ['I', query_after.trim()];

          query_after = query_before.replace(/\bj\b/g, '');
    if (query_before !== query_after) return ['J', query_after.trim()];

          query_after = query_before.replace(/\bk\b/g, '');
    if (query_before !== query_after) return ['K', query_after.trim()];

          query_after = query_before.replace(/\bl\b/g, '');
    if (query_before !== query_after) return ['L', query_after.trim()];

          query_after = query_before.replace(/\bm\b/g, '');
    if (query_before !== query_after) return ['M', query_after.trim()];

          query_after = query_before.replace(/\bn\b/g, '');
    if (query_before !== query_after) return ['N', query_after.trim()];

          query_after = query_before.replace(/\bo\b/g, '');
    if (query_before !== query_after) return ['O', query_after.trim()];

          query_after = query_before.replace(/\bp\b/g, '');
    if (query_before !== query_after) return ['P', query_after.trim()]
    
          query_after = query_before.replace(/\bq\b/g, '');
    if (query_before !== query_after) return ['Q', query_after.trim()];

          query_after = query_before.replace(/\br\b/g, '');
    if (query_before !== query_after) return ['R', query_after.trim()];

          query_after = query_before.replace(/\bs\b/g, '');
    if (query_before !== query_after) return ['S', query_after.trim()];

          query_after = query_before.replace(/\bt\b/g, '');
    if (query_before !== query_after) return ['T', query_after.trim()];

          query_after = query_before.replace(/\bu\b/g, '');
    if (query_before !== query_after) return ['U', query_after.trim()];

          query_after = query_before.replace(/\bv\b/g, '');
    if (query_before !== query_after) return ['V', query_after.trim()];

          query_after = query_before.replace(/\bw\b/g, '');
    if (query_before !== query_after) return ['W', query_after.trim()];

          query_after = query_before.replace(/\bx\b/g, '');
    if (query_before !== query_after) return ['X', query_after.trim()];

          query_after = query_before.replace(/\by\b/g, '');
    if (query_before !== query_after) return ['Y', query_after.trim()];

          query_after = query_before.replace(/\bz\b/g, '');
    if (query_before !== query_after) return ['Z', query_after.trim()];

       
    return ['', query_before];
}
