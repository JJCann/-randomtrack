/*
 * Nightbot command:
 * !editcom -ul=everyone -cd=5 !randomtrackps4 $(eval track('$(query)', $(urlfetch json https://docs.google.com/spreadsheets/d/1rjaElT--iBujCYa-00DOHExZgrfh2BCTDUVnCRXg7nM/export?exportFormat=tsv), $(urlfetch json https://docs.google.com/spreadsheets/d/1sMf-afA9qYImi8yhXAERLKv4i5jvNfPzCpcWLip2riY/export?exportFormat=tsv)); $(urlfetch json https://raw.githubusercontent.com/JJCann/-randomtrack/master/randomtrackps4lsac);)
*/
function track(query = '', track_name = {}, track_link = {}) {
    query = normalize(query);

    /* Find all tracks that match the specified track type */
    const [trackname] = parse_query(query);
    const names = track_name[trackname];
    const [tracklink] = parse_query(query);
    const links = track_link[tracklink];
    if (names !== Object(names)) {
        return 'To use this command, write `!randomtrackps4`, then a space, then either `serious`, `troll` or `offroad`. For PS5 tracks, use `!randomtrackps5`. For anything more specific, check out the track spreadsheet! https://docs.google.com/spreadsheets/d/1T8wF5lqMdDzjttTOAb-_PMQ-4nvP7D7GtaOZovlCrcc'
    }
 
    /* Output a random track (or error message) */
    if (names.length > 0) {
        const i = Math.floor(Math.random() * names.length);
        const track = names[i];
        const link = links[i];
        
        return track + ' - https://' + link;
    }
    return 'Could not find a matching random track ¯\\_(ツ)_/¯';
}

function normalize(text) {
    if (!text) {
        text = '';
    }

    /* Convert to lowercase */
    text = text.toLowerCase();

    /* Remove plural (unless part of 'PS 4')*/
    text = text.replace(/(?<=\bp)s\b(?=4)/g, '');

    /* Remove accents */
    text = text.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

    /* Remove everything behind '@' */
    text = text.replace(/\s*@.*/, '');

    /* Remove all chars that are not letters */
    text = text.replace(/[^a-z0-9 ]+/g, '');

    return text;      
}

function parse_query(query_before='') {
    var query_after = '';

    query_after = query_before.replace(/\btroll\b/g, '');
    if (query_before !== query_after) return ['Troll', query_after.trim()];

    query_after = query_before.replace(/\bserious\b/g, '');
    if (query_before !== query_after) return ['Serious', query_after.trim()];

    query_after = query_before.replace(/\boffroad\b/g, '');
    if (query_before !== query_after) return ['Offroad', query_after.trim()];

    return ['', query_before];
}
