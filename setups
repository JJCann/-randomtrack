/*
 * Nightbot command:
 * !editcom -ul=everyone -cd=5 !setup $(eval car('$(query)', $(urlfetch json https://docs.google.com/spreadsheets/d/1JB6lfIutxmaNJcUB48ReIj0OZ4YxWpR6b6M0qKgCecc/export?exportFormat=tsv)); $(urlfetch json https://raw.githubusercontent.com/JJCann/-randomtrack/master/setups);)
*/
function car(query = '', data = {}) {
    query = normalize(query);

    /* Find all car that match the specified track type */
    const [carname] = parse_query(query);
    const cars = data[carname];
    if (cars !== Object(cars)) {
        return 'To use this command, write !setup, then a space, then the car you want'
    }
 
    /* Output a random group (or error message) */
    if (cars.length > 0) {
        const i = Math.floor(Math.random() * cars.length);
        const car = cars[i];
        
        return car
    }
    return 'Could not find a matching random group ¯\\_(ツ)_/¯';
}

function normalize(text) {
    if (!text) {
        text = '';
    }

    /* Convert to lowercase */
    text = text.toLowerCase();

    /* Remove plural (unless part of 'PS 4')*/
    text = text.replace(/(?<=\bp)s\b(?=4)/g, '');

    /* Remove accents */
    text = text.normalize('NFD').replace(/[\u0300-\u036f]/g, '');

    /* Remove everything behind '@' */
    text = text.replace(/\s*@.*/, '');

    /* Remove all chars that are not letters */
    text = text.replace(/[^a-z0-9 ]+/g, '');

    return text;
}

function parse_query(query_before='') {
    var query_after = '';

    query_after = query_before.replace(/\b811\b/g, '');
    if (query_before !== query_after) return ['811', query_after.trim()];

    query_after = query_before.replace(/\b190z\b/g, '');
    if (query_before !== query_after) return ['190z', query_after.trim()];

    query_after = query_before.replace(/\b8fdrafter\b/g, '');
    if (query_before !== query_after) return ['8f Drafter', query_after.trim()];
    
   return ['', query_before];
}
